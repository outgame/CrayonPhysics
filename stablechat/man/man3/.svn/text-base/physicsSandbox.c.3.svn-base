.TH "core/physicsSandbox.c" 3 "Fri Mar 1 2013" "Crayon Physics A++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
core/physicsSandbox.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'physics\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "static cpBody * \fBadd_segment_to_body\fP (cpSpace *space, cpBody *drawing)"
.br
.ti -1c
.RI "static cpBody * \fButils_update_drawing\fP (cpBody *drawing)"
.br
.ti -1c
.RI "static Point_array * \fBshift_origin\fP (Point_array *pa, cpVect old_origin, cpVect new_origin)"
.br
.ti -1c
.RI "static Point_array * \fBpoint_array_new\fP (cpFloat x, cpFloat y, long color_rgb)"
.br
.ti -1c
.RI "static void \fBpoint_array_free\fP (Point_array *pa)"
.br
.ti -1c
.RI "static void \fBfree_shape\fP (cpBody *body, cpShape *shape, void *data)"
.br
.ti -1c
.RI "static void \fBpoint_array_free_arrays\fP (Point_array *pa)"
.br
.ti -1c
.RI "cpBody * \fBdrawing_new\fP (cpFloat x, cpFloat y, long color_rgb)"
.br
.ti -1c
.RI "cpBody * \fBdrawing_update\fP (cpSpace *space, cpBody *drawing, cpFloat x, cpFloat y)"
.br
.ti -1c
.RI "void \fBdrawing_activate\fP (cpSpace *space, cpBody *drawing)"
.br
.ti -1c
.RI "void \fBfree_body_full\fP (cpBody *body)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "static cpBody * add_segment_to_body (cpSpace *space, cpBody *drawing)\fC [static]\fP"

.PP
Definition at line 129 of file physicsSandbox\&.c\&.
.SS "void drawing_activate (cpSpace *space, cpBody *drawing)"
On mouse release Unsleeps the cpBody so that it will begin to interact with the space Also frees the GArrays in the UserData of the body but keeps color_rgb because the arrays won't be used anymore but the color still needs to be drawm
.PP
\fBParameters:\fP
.RS 4
\fIcpBody\fP *drawing to be activated when it is done being drawn 
.RE
.PP

.PP
Definition at line 147 of file physicsSandbox\&.c\&.
.SS "cpBody* drawing_new (cpFloatx, cpFloaty, longcolor_rgb)"
On mouse press Starts the drawing by creating a cpBody Calls the constructor for a Point_array and stores it in the UserData parameter for the cpBody Initializes the Point_array with the coordinates and the color
.PP
\fBParameters:\fP
.RS 4
\fIint\fP x value in world coordinates (not mouse coordinates) 
.br
\fIint\fP y value 
.br
\fIlong\fP color_rgb that stores an ARGB value in 32 bits
.RE
.PP
\fBReturns:\fP
.RS 4
cpBody* with a Point_array in the UserData 
.RE
.PP

.PP
Definition at line 99 of file physicsSandbox\&.c\&.
.SS "cpBody* drawing_update (cpSpace *space, cpBody *drawing, cpFloatx, cpFloaty)"
On mouse drag Adds a new segment to the drawing if the mouse has been dragged past THRESHOLD Creates a new cpShape to add to the body Updates mass, moment, and center of mass of the body
.PP
\fBParameters:\fP
.RS 4
\fIcpSpace\fP *space that is holding the body 
.br
\fIcpBody\fP *drawing to be updated 
.br
\fIint\fP x value in world coordinates 
.br
\fIint\fP y value
.RE
.PP
\fBReturns:\fP
.RS 4
cpBody* that has an added segment and updated properties 
.RE
.PP

.PP
Definition at line 109 of file physicsSandbox\&.c\&.
.SS "void free_body_full (cpBody *body)"
Frees the body and all of its shapes Also frees the Point_array in the user data
.PP
\fBParameters:\fP
.RS 4
\fIcpBody\fP *body to be freed 
.RE
.PP

.PP
Definition at line 226 of file physicsSandbox\&.c\&.
.SS "static void free_shape (cpBody *body, cpShape *shape, void *data)\fC [static]\fP"

.PP
Definition at line 233 of file physicsSandbox\&.c\&.
.SS "void point_array_free (Point_array *pa)\fC [static]\fP"

.PP
Definition at line 90 of file physicsSandbox\&.c\&.
.SS "static void point_array_free_arrays (Point_array *pa)\fC [static]\fP"

.PP
Definition at line 94 of file physicsSandbox\&.c\&.
.SS "Point_array * point_array_new (cpFloatx, cpFloaty, longcolor_rgb)\fC [static]\fP"

.PP
Definition at line 76 of file physicsSandbox\&.c\&.
.SS "static Point_array * shift_origin (Point_array *pa, cpVectold_origin, cpVectnew_origin)\fC [static]\fP"

.PP
Definition at line 198 of file physicsSandbox\&.c\&.
.SS "static cpBody * utils_update_drawing (cpBody *drawing)\fC [static]\fP"

.PP
Definition at line 155 of file physicsSandbox\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Crayon Physics A++ from the source code\&.
